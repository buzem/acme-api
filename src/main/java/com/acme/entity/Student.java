package com.acme.entity;

import com.acme.validation.ValidationConstants;
import jakarta.persistence.*;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Pattern;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

import java.util.HashSet;
import java.util.Set;

/**
 * Using studentId as natural business key for uniqueness.
 * ID is auto-generated by database, studentId serves as business identifier.
 */
@Entity
@Table(
    name = "students",
    uniqueConstraints = @UniqueConstraint(
        columnNames = {"student_id"},
        name = "uk_student_id"
    )
)
@Getter
@Setter
@NoArgsConstructor
@ToString(exclude = "lecturers") // Prevent circular reference in toString
public class Student {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    private Long id;

    @NotBlank(message = "Name " + ValidationConstants.NOT_BLANK_MESSAGE)
    @Pattern(regexp = ValidationConstants.ALPHANUMERIC_PATTERN, message = "Name " + ValidationConstants.ALPHANUMERIC_MESSAGE)
    @Column(nullable = false)
    private String name;

    @NotBlank(message = "Surname " + ValidationConstants.NOT_BLANK_MESSAGE)
    @Pattern(regexp = ValidationConstants.ALPHANUMERIC_PATTERN, message = "Surname " + ValidationConstants.ALPHANUMERIC_MESSAGE)
    @Column(nullable = false)
    private String surname;

    @NotBlank(message = ValidationConstants.STUDENT_ID_MESSAGE)
    @Pattern(regexp = ValidationConstants.ALPHANUMERIC_PATTERN, message = "Student ID " + ValidationConstants.ALPHANUMERIC_MESSAGE)
    @Column(name = "student_id", nullable = false, unique = true)
    private String studentId;

    @ManyToMany(mappedBy = "students", fetch = FetchType.LAZY)
    private Set<Lecturer> lecturers = new HashSet<>();

    public Student(String name, String surname, String studentId) {
        this.name = name;
        this.surname = surname;
        this.studentId = studentId;
    }

} 